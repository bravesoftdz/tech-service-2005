unit BoldControllersUnit;

interface

uses
  SysUtils, Classes, BoldHandlesDataModule, BoldPropertiesController,
  BoldSubscription, BoldElements, BoldControlPack, BoldStringControlPack;

type
  TBoldControllersDM = class(TDataModule)
    bpcReturnAviable: TBoldPropertiesController;
    bpcUnCacheSaleAviable: TBoldPropertiesController;
    bpcClientInfoEnabled: TBoldPropertiesController;
    bpcCompanyInfoEnabled: TBoldPropertiesController;
    bpcActContentCtrlGrid: TBoldPropertiesController;
    bpcAddNewCustZ: TBoldPropertiesController;
    bpcActEdit: TBoldPropertiesController;
    bpcActNewAdd: TBoldPropertiesController;
    bpcNotAllSotr: TBoldPropertiesController;
    bpcNotAllRes: TBoldPropertiesController;
    bpcBackDevReturn: TBoldPropertiesController;
    BoldPropertiesController1: TBoldPropertiesController;
    bpcFilterCust: TBoldPropertiesController;
    BoldAsStringRendererActs: TBoldAsStringRenderer;
    procedure BoldAsStringRendererActsSetColor(Element: TBoldElement;
      var AColor: TColor; Representation: Integer; Expression: string);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  BoldControllersDM: TBoldControllersDM;

implementation

{$R *.dfm}

uses MainFormUnit, NewCustFormUnit, Controls, Windows, SysUtils, Menus, ToolWin, BusinessClasses, Graphics, ExtCtrls, Classes, TehnPersonalUnit, ResourcesEnumUnit;

procedure TBoldControllersDM.BoldAsStringRendererActsSetColor(
  Element: TBoldElement; var AColor: TColor; Representation: Integer;
  Expression: string);
begin
    if assigned(element) then
    if not((element as TSostav_priemki_vydachi).Vydan) then
      aColor := clSilver;
end;

end.
